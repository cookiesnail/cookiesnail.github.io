<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>每日一题</title>
    <link href="/2024/07/26/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <url>/2024/07/26/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="每日一题"><a href="#每日一题" class="headerlink" title="每日一题"></a>每日一题</h1><h2 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h2><h3 id="2024-7-26-找出分区值"><a href="#2024-7-26-找出分区值" class="headerlink" title="2024.7.26 找出分区值"></a>2024.7.26 找出分区值</h3><h4 id="description"><a href="#description" class="headerlink" title="description"></a>description</h4><p>给你一个 正 整数数组 nums 。<br>将 nums 分成两个数组：nums1 和 nums2 ，并满足下述条件：<br>数组 nums 中的每个元素都属于数组 nums1 或数组 nums2 。<br>两个数组都 非空 。<br>分区值 最小 。<br>分区值的计算方法是 |max(nums1) - min(nums2)| 。<br>其中，max(nums1) 表示数组 nums1 中的最大元素，min(nums2) 表示数组 nums2 中的最小元素。<br>返回表示分区值的整数。</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p>思路比较简单，最小分区值一定是大小相邻两个元素的差值，所以先排序，再找到最小的相邻差值即可，时间复杂度受限于排序算法，用的是快排，所以为$\Omicron(NlogN)$<br>代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C"><br><span class="hljs-type">int</span> <span class="hljs-title function_">cmp</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *a, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *b)</span> &#123;<br>    <span class="hljs-keyword">return</span> *(<span class="hljs-type">int</span>*)a - *(<span class="hljs-type">int</span>*)b;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">findValueOfPartition</span><span class="hljs-params">(<span class="hljs-type">int</span>* nums, <span class="hljs-type">int</span> numsSize)</span>&#123;<br>    qsort(nums,numsSize,<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>),cmp);<br>    <span class="hljs-type">int</span> min;<br>    <span class="hljs-type">int</span> temp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;numsSize<span class="hljs-number">-1</span>;i++)&#123;<br>        temp=nums[i+<span class="hljs-number">1</span>]-nums[i];<br>        <span class="hljs-keyword">if</span>(i)&#123;<br>            min=min&lt;temp?min:temp;<br>        &#125;<br>        <span class="hljs-keyword">else</span> min=temp;<br>        <span class="hljs-keyword">if</span>(!temp)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> min;<br>&#125;<br></code></pre></td></tr></table></figure><p>写的时候发现自己居然忘了怎么写快排，所以重新写一遍</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C">    <span class="hljs-type">void</span> <span class="hljs-title function_">quick_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> left,<span class="hljs-type">int</span> right)</span>&#123;<span class="hljs-comment">//快排</span><br>    <span class="hljs-keyword">if</span>(left&gt;right)<span class="hljs-keyword">return</span>;<span class="hljs-comment">//当左下标大于右下标时返回</span><br>    <span class="hljs-type">int</span> key =left,temp;<span class="hljs-comment">//将最左侧设为key值</span><br>    <span class="hljs-type">int</span> mright=right;<span class="hljs-comment">//记录右下标</span><br>    <span class="hljs-keyword">while</span>(left&lt;right)&#123;<br>        <span class="hljs-keyword">while</span>(left&lt;right&amp;&amp;a[right]&gt;a[key])right--;<span class="hljs-comment">//从右开始找到小于key值的第一个元素</span><br>        <span class="hljs-keyword">while</span>(left&lt;right&amp;&amp;a[left]&lt;=a[key])left++;<span class="hljs-comment">//从左开始找到大于key的第一个元素</span><br>        temp=a[left];<span class="hljs-comment">//交换left和right指向的两个元素的值</span><br>        a[left]=a[right];<br>        a[right]=temp;<br>    &#125;<br>    temp=a[left];<span class="hljs-comment">//将key值和中间值相交换，此时left指向的元素左边比该元素小，右边的元素都比该元素大</span><br>    a[left]=a[key];<br>    a[key]=temp;<br>    quick_sort(a,key,left<span class="hljs-number">-1</span>);<span class="hljs-comment">//对左边的元素再次进行快排</span><br>    quick_sort(a,left+<span class="hljs-number">1</span>,mright);<span class="hljs-comment">//对右边的元素进行快排</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h3 id="2024-7-29-棒球比赛"><a href="#2024-7-29-棒球比赛" class="headerlink" title="2024.7.29 棒球比赛"></a>2024.7.29 棒球比赛</h3><h4 id="description-1"><a href="#description-1" class="headerlink" title="description"></a>description</h4><p>你现在是一场采用特殊赛制棒球比赛的记录员。这场比赛由若干回合组成，过去几回合的得分可能会影响以后几回合的得分。<br>比赛开始时，记录是空白的。你会得到一个记录操作的字符串列表 ops，其中 ops[i] 是你需要记录的第 i 项操作，ops 遵循下述规则：<br>整数 x - 表示本回合新获得分数 x<br>“+” - 表示本回合新获得的得分是前两次得分的总和。题目数据保证记录此操作时前面总是存在两个有效的分数。<br>“D” - 表示本回合新获得的得分是前一次得分的两倍。题目数据保证记录此操作时前面总是存在一个有效的分数。<br>“C” - 表示前一次得分无效，将其从记录中移除。题目数据保证记录此操作时前面总是存在一个有效的分数。<br>请你返回记录中所有得分的总和。</p><h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h4><p>根据题目用数组实现一个栈，然后模拟就可以了<br>代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> <span class="hljs-title function_">calPoints</span><span class="hljs-params">(<span class="hljs-type">char</span>** operations, <span class="hljs-type">int</span> operationsSize)</span> &#123;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> * record=(<span class="hljs-type">int</span>*)<span class="hljs-built_in">malloc</span>(operationsSize*<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;operationsSize;i++)&#123;<br>        <span class="hljs-keyword">if</span>(operations[i][<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;+&#x27;</span>)&#123;<br>            record[count++]=record[count<span class="hljs-number">-1</span>]+record[count<span class="hljs-number">-2</span>];<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(operations[i][<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;C&#x27;</span>)&#123;<br>            count--;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(operations[i][<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;D&#x27;</span>)&#123;<br>            record[count++]=record[count<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            record[count++]=atoi(operations[i]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;count;i++)&#123;<br>        sum+=record[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br></code></pre></td></tr></table></figure><p>学到了一个新函数atoi，是stdlib库里面的，用来将字符串转换为整数</p>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>algorithm</tag>
      
      <tag>practice</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>csapp note</title>
    <link href="/2024/07/25/csapp/"/>
    <url>/2024/07/25/csapp/</url>
    
    <content type="html"><![CDATA[<h1 id="Computer-Systems-A-Programmer’s-Perspective"><a href="#Computer-Systems-A-Programmer’s-Perspective" class="headerlink" title="Computer Systems A Programmer’s Perspective"></a>Computer Systems A Programmer’s Perspective</h1><h2 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h2>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>system</tag>
      
      <tag>book</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>&#39;离散数学复习&#39;</title>
    <link href="/2024/07/25/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E5%A4%8D%E4%B9%A0/"/>
    <url>/2024/07/25/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="概率论部分"><a href="#概率论部分" class="headerlink" title="概率论部分"></a>概率论部分</h1><ul><li>独立时 $P[AB]&#x3D;P[A]P[B]$<br>注意独立（independence)$\neq$mutually exclusive<br>当independence$\land$mutually exclusive时应该有A$\land$B&#x3D;$\varnothing$</li><li><strong>Discrete Random Variable</strong><ul><li><p><strong>probability mass function(PMF)</strong><br>F$_X$($x$)&#x3D;P[X&#x3D;$x$]<br>P(n,k)&#x3D;${n!\over (n-k)!}$<br>C(n,k)&#x3D;${n!\over (n-k)!k!}$&#x3D;$\small\binom nr$  </p></li><li><p><strong>Bernoulli Random Variable</strong><br>$E[X]&#x3D;p$<br>$Var[X]&#x3D;p(1-p)$<br>$$P_X(x)&#x3D;<br>\begin{cases}<br>1-p, &amp;\text{x&#x3D;0}\<br>p, &amp;\text{x&#x3D;1}\<br>0, &amp;\text{otherwise}<br>\end{cases}<br>$$  </p></li><li><p><strong>Geometric Random Variable</strong><br>Describe the <strong>first occurrence</strong> in a sequence of trials<br>$E[X]&#x3D;\frac1p$<br>$Var[X]&#x3D;\frac{(1-p)}{p^2}$<br>$P_X(x)&#x3D;p(1-p)^{x-1}\quad x&#x3D;1,2\cdots$  </p></li><li><p><strong>Binomial Random Variable</strong><br>$E[X]&#x3D;np$<br>$Var[X]&#x3D;np(1-p)$<br>$P_K(k)&#x3D;\binom nkp^k(1-p)^{n-k}\quad k&lt;n$</p></li><li><p><strong>Pascal Distribution</strong><br>x次重复独立实验中事件出现k次的概率<br>$E[X]&#x3D;\frac kp$<br>$Var[X]&#x3D;\frac{k(1-p)}{p^2}$<br>$P_X(x)&#x3D;\binom {x-1}{k-1}p^k(1-p)^{x-k}\quad x&gt;k$  </p></li><li><p><strong>Discrete Uniform Random Variable</strong><br>$E[X]&#x3D;\frac {k+l}2$<br>$Var[X]&#x3D;\frac{(l-k)(l-k+2)}{12}$<br>$$P_X(x)&#x3D;<br>\begin{cases}<br>{1 \over{l-k+1}}, &amp;\text{x&#x3D;k,k+1,k+2,$\cdots$,l}\<br>0, &amp;\text{otherwise}\<br>\end{cases}<br>$$  </p></li><li><p><strong>Poisson Random Variable</strong><br>describe <strong>a given number of events occurring in a fixed interval of time</strong> if these events occur with a <strong>known average rate</strong> and <strong>independently</strong> of the time since the last event<br>$a\ in\ range\ a&gt;0$</p><p>$$P_X(x)&#x3D;<br>\begin{cases}<br>{a^xe^{-a} \over{x!}}, &amp;\text{x&#x3D;0,1,2,$\cdots$}\<br>0, &amp;\text{otherwise}\<br>\end{cases}<br>$$  </p></li><li><p><strong>Cumulative Distribution Function(CDF)</strong><br>$F_X(x)&#x3D;P[X\le x]$<br>1.$F_X(-{\infty})&#x3D; 0 and F_X({\infty})&#x3D; 1$<br>2.$for\ all \ a&gt;b,F_X(a){\ge}F_X(b)$<br>3.$for\ x{\in}S,\epsilon\in R,\lim_{\epsilon \to 0}F_X(x-\epsilon)&#x3D;P_X(x)$<br>4.$if\ x_i\le x\le x_{i+1}F_X(x)&#x3D;F_X(x_i)$</p></li><li><p><strong>Median</strong><br>if x&#x3D;median then $P[X\le x]\ge \frac12,P[X\ge x]\ge \frac12$</p></li><li><p><strong>Mode</strong><br>$x_{mod}\ satisfying\ P_X(x_{mod}\ge P_X(x)\ for \ all\ x$  </p></li><li><p>Expected Value(期望)<br>$\Sigma xP_X(x)$  </p></li><li><p><strong>Derived Random Variable</strong><br>$P_Y(y)&#x3D;\Sigma P_X(x)(x:g(x)&#x3D;y)$<br>$E[Y]&#x3D;\Sigma g(x)P_X(x)$<br>$E[aX+b]&#x3D;aE[X]+b$  </p></li><li><p><strong>Variance(方差)</strong></p><p>$$<br>Var[X]&#x3D;E[(X-\mu x)^2]\<br>Var[X]&#x3D;E[X^2]-(E[X])^2\<br>Var[aX+b]&#x3D;a^2Var[X]<br>$$  </p></li><li><p><strong>Standard Deviation</strong><br>$\sigma _X&#x3D;\sqrt {Var[X]}$  </p></li><li><p><strong>Moments</strong><br>$The$ <em>n</em>$th\ moment\ is\ E[X^n]$<br>$The$ <em>n</em>$th\ central\ momnent\ is E[(X-\mu X)^n]$</p></li></ul></li><li><strong>Continunous Random Variable</strong>  <ul><li><strong>Cumulative Distribution Function(CDF)</strong><br>$F_X(x)&#x3D;P[X\le x]$<br>$P[x_1&lt;x\le x_2] &#x3D; F_X(x_2)-F_X(x_1)$  </li><li><strong>Probability Density Function</strong><br>$f_X(x)&#x3D;\frac{dF_X(x)}{dx}$<br>$f_X(x)\ge 0\ for\ all\ x$<br>$F_X(x)&#x3D;\int^x_{-\infty}f_X(\mu)d\mu$<br>$\int^{\infty}_{-\infty}f_X(x)dx&#x3D;1$  </li><li><strong>Expected Value</strong><br>$E[X]&#x3D;\int^{\infty}_{-\infty}xf_X(x)dx$</li><li><strong>Uniform Random Variable</strong><br>$f_X(x)&#x3D;\frac 1{(b-a)}\quad a\le x&lt;b$<br>$$<br>F_X(x)&#x3D;\begin{cases}<br>0, &amp;\text{x$\le$a}\<br>\frac {x-a}{b-a}, &amp;\text{a&lt;x$\le$b}\<br>1,&amp;\text{x&gt;b}\<br>\end{cases}<br>$$<br>$E[X]&#x3D;\frac {b+a}2$<br>$Var[X]&#x3D;\frac{(b-a)^2}{12}$  </li><li><strong>Gaussian Random Variables</strong><br>$f_X(x)&#x3D;\frac 1{\sqrt {2\pi \sigma^2}}e^{-(x-\mu)^2&#x2F;2\sigma^2}$<br>parameter $\mu$ can be any real number and the parameter $\sigma &gt;0$<br>$E[X]&#x3D;\mu\quad Var[X]&#x3D;\sigma^2$<br>CDF:$F_X(x)&#x3D;\Phi(\frac{x-\mu} \sigma)$</li><li><strong>Standard Normal Random Variable</strong><br>The standard normal random variable Z is the Gaussian(0,1) random variable.<br>CDF:$\Phi(z)&#x3D;\frac1{\sqrt {2\pi}}\int^z_{-\infty}e^{-\mu^2&#x2F;2}d\mu$<br>$\Phi(-z)&#x3D;1-\Phi(z)$</li></ul></li><li><strong>Joint Probability Mass Functon</strong><br>$P_{X,Y}(x,y)&#x3D;P[X&#x3D;x,Y&#x3D;y]$<br>$P[B]&#x3D;\Sigma P_{X,Y}(x,y)\quad (x,y)\in B$  </li><li><strong>Marginal PMF</strong><br>$P_X(x)&#x3D;\Sigma P_{X,Y}(x,y)$离散用加法，连续用积分，求$P_Y(y)$同理  </li><li><strong>Joint PDF</strong><br>$F_{X,Y}(x,y)&#x3D;\int^x_{-\infty}d\mu\int^y_{-\infty}f_{X,Y}(\mu,\upsilon)d\upsilon$<br>$\int^{\infty}<em>{-\infty}d\mu\int^{\infty}</em>{-\infty}f_{X,Y}(\mu,\upsilon)d\upsilon&#x3D;1$  </li><li><strong>Covariance</strong><br>$Cov[X,Y]&#x3D;E[(X-\mu Y)(Y-\mu Y)]$<br>$Cov[X,Y]&#x3D;E[XY]-\mu x\mu y$<br>$Var[X+Y]&#x3D;Var[X]+Var[Y]+2Cov[X,Y]$</li></ul><p>$$<br>Variables\ tend\ to\ be<br>  \begin{cases}<br>  similar\ behavior,&amp;\text{Cov&gt;0}\<br>  opposite\ behavior,&amp;text{Cov&lt;0}\<br>  uncorrelated\ behavior,&amp;text{Cov&#x3D;0}<br>  \end{cases}<br>$$  </p><ul><li><strong>Correlation Coefficient</strong><br>$\rho_{X,Y}&#x3D;\frac{Cov[X,Y]}{\sqrt {Var[X]Var[Y]}}&#x3D;\frac{Cov[X,Y]}{\sigma_X\sigma_Y}$<br>$if\ X&#x3D;aX+b\land Y&#x3D;cY+d$<br>$\rho X,Y&#x3D;\rho X,Y,Cov[X,Y]&#x3D;acCov[X,Y]$  </li><li><strong>Correlation</strong><br>$rX,Y&#x3D;E[XY]$<br>$Cov[X,Y]&#x3D;rX,Y-\mu X\mu Y$  </li><li><strong>Uncorrelated Random Variables</strong><br>$if Cov[X,Y]&#x3D;0$<br>$E[g(X)h(y)]&#x3D;E[g(X)]E[h(Y)]$<br>$rX,Y&#x3D;E[XY]&#x3D;E[X]E[Y]$<br>$Cov[X,Y]&#x3D;\sigma X,Y&#x3D;0$<br>$Var[X+Y]&#x3D;Var[X]+Var[Y]$  </li><li><strong>Conditional PMF</strong><br>$P_{X|Y}(x|y)&#x3D;\frac {P_{X,Y}(x,y)}{P_Y(y)}\quad P_{Y|X}(y|x)同理$  </li><li><strong>Conditional PDF</strong><br>$f_{X|Y}(x|y)&#x3D;\frac {f_{X,Y}(x,y)}{f_Y(y)}\quad f_{Y|X}(y|x)同理$  </li><li><strong>Sum Of The Expected Value</strong><br>$W_n &#x3D;X_1+\cdots+X_n$<br>$E[W_n]&#x3D;E[X_1]+E[X_2]+\cdots+E[X_n]$<br>$Var[W_n]&#x3D;\Sigma^n_{i&#x3D;1}Var[X_i]+2\Sigma^{n-1}<em>{i&#x3D;1}\Sigma^n</em>{j&#x3D;i+1}Cov[X_i,X_j]\quad 所以各自独立时，后半部分为0$  </li><li><strong>Central Limit Theorem</strong><br>Given $X_1,X_2,\dots,X_n$ a sequence of independent and identically distributed random variables with expected value $\mu_X$ and variance $\sigma^2_X$,the CDF of $Z_n&#x3D;(\Sigma^n_{i&#x3D;1}X_i-n\mu_X)&#x2F;\sqrt {n\sigma^2_X}$ has the property $\lim_{n\to{\infty}}F_{Z_n}(z)&#x3D;\Phi(z)$</li></ul><blockquote><p>CDF:$\Phi(z)&#x3D;\frac1{\sqrt {2\pi}}\int^z_{-\infty}e^{-\mu^2&#x2F;2}d\mu$</p></blockquote><ul><li><p><strong>De Moivre-Laplace Formula</strong><br>For abinomial$(n,p)$random variable K,<br>$P[k_1\le K\le k_2]\approx \Phi(\frac {k_2+0.5-np}{\sqrt{np(1-p)}})-\Phi(\frac{k_1-0.5-np}{\sqrt{np(1-p)}})$</p></li><li><p><strong>Sample Mean</strong><br>多次独立重复实验样本的平均值<br>$M_n(X)&#x3D;\frac{X_1+\cdots+X_n}n$<br>As n increases,$M_n(X)\to E[X]$<br>$E[M_n(X)]&#x3D;E[X]\quad Var[M_n(X)]&#x3D;\frac {Var[X]}n$<br>The sample mean $M_n(X)$ is an unbiased estimate of$E[X]$</p></li><li><p><strong>Useful Inequalities in Probality</strong></p><ul><li><strong>Markov Inequality</strong><br>For a random variable $X$,such that $P[X&lt;0]&#x3D;0$,and a constant c,<br>$P[X\ge c^2]\le \frac{E[X]}{c^2}$</li><li><strong>Chebyshev Inequality</strong><br>$P[|Y-\mu_Y|\ge c]\le \frac{Var[Y]}{c^2}$<br>$P[|M_n(X)-\mu_X|\ge c]\le \frac {Var[X]}{nc^2}\quad 所以当n趋于无穷时，该式趋于1$</li></ul></li><li><p><strong>Mean Square Error</strong><br>$e&#x3D;E[(R-r)^2]$</p></li><li><p><strong>Sample Variance</strong><br>$V_n(X)&#x3D;\frac 1n\Sigma^n_{i&#x3D;1}(X_i-M_n(X))^2$<br>$E[V_n(X)]&#x3D;\frac{n-1}nVar[X]$</p></li><li><p><strong>Confidence Intervals</strong><br>$P[|M_n(X)-\mu_X|&lt; c]\ge 1- \frac {Var[X]}{nc^2}&#x3D;1-\alpha$<br>$1-\alpha$ is hte cpnfidence coefficient<br>Confidence Intervals $(\mu_X-c,\mu_X+c)$<br>if X be a Gaunssian$(\mu,\sigma)$random variable,has confidence coefficient $1-\alpha$,where $\frac{\alpha}2&#x3D;Q(c\sqrt n&#x2F;\sigma)&#x3D;1-\Phi(c\sqrt n&#x2F;\sigma)$<br>Thus $1-\alpha&#x3D;1-2Q(c\sqrt n&#x2F;\sigma)&#x3D;2\Phi(c\sqrt n&#x2F;\sigma)-1$</p></li><li><p><strong>Stochastic Process(随机过程)</strong><br>Sample function x(t,s) is the time function associated with outcome $s$ of an experiment<br>All possible Sample function are ensample</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>takeaway</category>
      
    </categories>
    
    
    <tags>
      
      <tag>math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/20/hello-world/"/>
    <url>/2024/07/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
